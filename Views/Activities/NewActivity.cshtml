@*@model WebApplication1.Models.ActivitiesModel*@
@model WebApplication1.Models.NewActivityModel
@{

    ViewData["Title"] = "New Activity";  
    

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />  

</head>
<body>
   <h1>Esse é um teste</h1>

   <div class="form-group">
       <select id="ClientName" onchange="selectedOption()">
           <option selected="true" onclick="selectedOption" >Selecione um cliente</option>
           @foreach(ClientModel m in Model.Client){
                <option value=@m.ClientId>@m.Name</option>
            }
        </select>
        <select id="TaskList" style="display:none;">
            <option selected="true" value="">Selecione um cliente</option>
          

        </select>
      
   </div>

   @*@ViewData["Message"]*@  
 @*   @foreach(ClientModel m in Model.client)
    {
        <h3>@Html.DisplayFor(modelItem => m.Name)</h3>
    }*@
</body>
</html>

<script type="text/javascript">
     

    function selectedOption(){       
               
        clientNumber = document.getElementById("ClientName").value 
       
        
       const rjson = fetch('/Activities/GetClientTask?id=' + clientNumber )
            .then(response => response.json())
            .then(jrs =>{
                getResult(jrs)   
                document.getElementById("TaskList").style.display = "block"
            } )
            .catch(err => {
                alert("Error getting the tasks.")
                console.log(err);
                throw err;
            })            
    }

    function getResult(response){        
        response.map( item => {
            let option = document.createElement("option")
            let select = document.getElementById("TaskList")
            option.text = item.Description
            option.value = item.Description        
            select.appendChild(option)
        })       
    }
</script>




